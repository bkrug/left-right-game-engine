       DEF  TSTLST,RSLTFL
	   REF  AEQ
* Detect if element is above horizontal line
       REF  COLHRZ

TSTLST DATA TSTEND-TSTLST-2/8
* Sprite directly above line
       DATA CH1
	   TEXT 'CH1   '
* Sprite directly below line
       DATA CH2
	   TEXT 'CH2   '
* Sprite top on line
       DATA CH3
	   TEXT 'CH3   '
* Sprite left above line edge
       DATA CH4
	   TEXT 'CH4   '
* Sprite left below line edge
       DATA CH5
	   TEXT 'CH5   '
* Sprite to the left of line (but high)
       DATA CH6
	   TEXT 'CH6   '
TSTEND
RSLTFL BYTE RSLTFE-RSLTFL-1
       TEXT 'DSK2.TESTRESULT.TXT'
RSLTFE
       EVEN
 
*
* Place a sprite directly above a
* horizontal line.
* Routine should return true.
*
* Upper-left corner of sprite
CH1SL  BYTE 57,56
* Sprite Width & Height
CH1SR  BYTE 13,15
* Left coordinates of line
CH1L   BYTE 83,49
* Width of line
CH1W   BYTE 104
*
       EVEN
CH1    MOV  R11,R12
       LI   R0,CH1SL
       LI   R1,CH1SR
       LI   R2,CH1L
       LI   R3,CH1W
       BL   @COLHRZ
* If R4 is expected to be true (-1)
       SETO R0
       MOV  R4,R1
	   LI   R2,CH1MS
       LI   R3,CH1ME-CH1MS
	   BLWP @AEQ
       MOV  R12,R11
	   RT
CH1MS  TEXT 'Sprite directly above line so a collision should be detected.'
CH1ME  EVEN

*
* Place a sprite directly below a
* horizontal line.
* Routine should return false.
*
* Upper-left corner of sprite
CH2SL  BYTE 31,110
* Sprite Width & Height
CH2SR  BYTE 13,15
* Left coordinates of line
CH2L   BYTE 26,104
* Width of line
CH2W   BYTE 61
*
       EVEN
CH2    MOV  R11,R12
       LI   R0,CH2SL
       LI   R1,CH2SR
	   LI   R2,CH2L
	   LI   R3,CH2W
	   BL   @COLHRZ
* If R4 is expected to be false (0)
       CLR  R0
       MOV  R4,R1
	   LI   R2,CH2MS
	   LI   R3,CH2ME-CH2MS
	   BLWP @AEQ
       MOV  R12,R11
	   RT
CH2MS  TEXT 'Sprite directly below line so no collision should be detected.'
CH2ME  EVEN

*
* Place a sprite top directly on
* horizontal line.
* Routine should return true.
*
* Upper-left corner of sprite
CH3SL  BYTE 170,190
* Sprite Width & Height
CH3SR  BYTE 13,15
* Left coordinates of line
CH3L   BYTE 170,172
* Width of line
CH3W   BYTE 48
*
       EVEN
CH3    MOV  R11,R12
       LI   R0,CH3SL
       LI   R1,CH3SR
	   LI   R2,CH3L
	   LI   R3,CH3W
	   BL   @COLHRZ
* If R4 is expected to be true (-1)
       SETO R0
       MOV  R4,R1
	   LI   R2,CH3MS
	   LI   R3,CH3ME-CH3MS
	   BLWP @AEQ
       MOV  R12,R11
	   RT
CH3MS  TEXT 'Sprite top directly on line so collision should be detected.'
CH3ME  EVEN

*
* Place a sprite left edge directly
* above horizontal line's left edge.
* Routine should return true.
*
* Upper-left corner of sprite
CH4SL  BYTE 123,12
* Sprite Width & Height
CH4SR  BYTE 11,14
* Left coordinates of line
CH4L   BYTE 202,12
* Width of line
CH4W   BYTE 149
*
       EVEN
CH4    MOV  R11,R12
       LI   R0,CH4SL
       LI   R1,CH4SR
	   LI   R2,CH4L
	   LI   R3,CH4W
	   BL   @COLHRZ
* If R4 is expected to be true (-1)
       SETO R0
       MOV  R4,R1
	   LI   R2,CH4MS
	   LI   R3,CH4ME-CH4MS
	   BLWP @AEQ
       MOV  R12,R11
	   RT
CH4MS  TEXT 'Sprite left edge directly above line left edge should result in collision.'
CH4ME  EVEN

*
* Place a sprite left edge directly
* below horizontal line's left edge.
* Routine should return false.
*
* Upper-left corner of sprite
CH5SL  BYTE 208,35
* Sprite Width & Height
CH5SR  BYTE 12,15
* Left coordinates of line
CH5L   BYTE 198,35
* Width of line
CH5W   BYTE 87
*
       EVEN
CH5    MOV  R11,R12
       LI   R0,CH5SL
       LI   R1,CH5SR
	   LI   R2,CH5L
	   LI   R3,CH5W
	   BL   @COLHRZ
* If R4 is expected to be false (0)
       CLR  R0
       MOV  R4,R1
	   LI   R2,CH5MS
	   LI   R3,CH5ME-CH5MS
	   BLWP @AEQ
       MOV  R12,R11
	   RT
CH5MS  TEXT 'Sprite left edge directly below line left edge should not result in collision.'
CH5ME  EVEN

*
* Place a sprite higher than line but
* to the left of it.
* Routine should return false.
*
* Upper-left corner of sprite
CH6SL  BYTE 8,31
* Sprite Width & Height
CH6SR  BYTE 10,15
* Left coordinates of line
CH6L   BYTE 72,101
* Width of line
CH6W   BYTE 62
*
       EVEN
CH6    MOV  R11,R12
       LI   R0,CH6SL
       LI   R1,CH6SR
	   LI   R2,CH6L
	   LI   R3,CH6W
	   BL   @COLHRZ
* If R4 is expected to be false (0)
       CLR  R0
       MOV  R4,R1
	   LI   R2,CH6MS
	   LI   R3,CH6ME-CH6MS
	   BLWP @AEQ
       MOV  R12,R11
	   RT
CH6MS  TEXT 'Sprite is to the left of the line so no collision should be detected.'
CH6ME  EVEN
       END